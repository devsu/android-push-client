ext {
  bintrayRepo = 'maven'
  bintrayName = 'android-push-client'

  publishedGroupId = 'com.devsu'
  libraryName = 'Android Push Client'
  artifact = 'pushclient'
  aarPackaging = 'aar'

  libraryDescription = 'Library that allows you to easily receive GCM/FCM Push Messages on Android.'

  siteUrl = 'https://github.com/devsu/android-push-client'
  gitUrl = 'https://github.com/devsu/android-push-client.git'

  libraryVersion = android.defaultConfig.versionName

  developerId = 'rion18'
  developerName = 'Alvaro LÃ³pez'
  developerEmail = 'rion18@hotmail.com'
  developerOrganization = "devsu"

  licenseName = 'The Apache Software License, Version 2.0'
  licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
  allLicenses = ["Apache-2.0"]

  issueManagementSystem = 'Github'
  issueManagementUrl = siteUrl + '/issues'
}

apply plugin: 'com.github.dcendents.android-maven'

group = publishedGroupId

install {
  repositories.mavenInstaller {
    pom.project {
      packaging aarPackaging
      groupId publishedGroupId
      artifactId artifact

      // Add your description here
      name libraryName
      description libraryDescription
      url siteUrl

      // Set your license
      licenses {
        license {
          name licenseName
          url licenseUrl
        }
      }
      developers {
        developer {
          id developerId
          name developerName
          email developerEmail
        }
      }
      scm {
        connection gitUrl
        developerConnection gitUrl
        url siteUrl
      }
      issueManagement {
        system issueManagementSystem
        url issueManagementUrl
      }
    }
  }
}

apply plugin: "com.jfrog.bintray"

version = libraryVersion

task sourcesJar(type: Jar) {
  from android.sourceSets.main.java.srcDirs
  classifier = 'sources'
}

task javadoc(type: Javadoc) {
  source = android.sourceSets.main.java.srcDirs
  classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  from javadoc.destinationDir
  classifier = 'javadoc'
}

artifacts {
  archives javadocJar
  archives sourcesJar
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
  user = properties.getProperty("bintray.user")
  key = properties.getProperty("bintray.api.key")

  configurations = ['archives']
  pkg {
    repo = bintrayRepo
    name = bintrayName
    userOrg = developerOrganization
    desc = libraryDescription
    websiteUrl = siteUrl
    vcsUrl = gitUrl
    licenses = allLicenses
    publish = true
    publicDownloadNumbers = true
    version {
      desc = libraryDescription
      released = new Date()
      name = android.defaultConfig.versionName
      gpg {
        sign = true
        passphrase = properties.getProperty("bintray.gpg.password")
      }
    }
  }
}
