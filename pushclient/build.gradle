apply plugin: 'com.android.library'

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.1"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 26
        versionCode 3
        versionName "1.1.2"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

ext {
    bintrayRepo = 'maven'
    bintrayName = 'gcm-push-client'

    publishedGroupId = 'com.devsu'
    libraryName = 'GCM Push Client'
    artifact = 'pushclient'

    libraryDescription = 'Library that allows you to easily receive GCM/FCM Push Messages on Android.'

    siteUrl = 'https://github.com/devsu/gcm-push-client'
    gitUrl = 'https://github.com/devsu/gcm-push-client.git'

    libraryVersion = android.defaultConfig.versionName

    developerId = 'rion18'
    developerName = 'Alvaro LÃ³pez'
    developerEmail = 'rion18@hotmail.com'
    developerOrganization = "devsu"

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

// MAVEN
apply plugin: 'com.github.dcendents.android-maven'

group = publishedGroupId

install {
    repositories.mavenInstaller {
        pom.project {
            packaging 'aar'
            groupId publishedGroupId
            artifactId artifact

            // Add your description here
            name libraryName
            description libraryDescription
            url siteUrl

            // Set your license
            licenses {
                license {
                    name licenseName
                    url licenseUrl
                }
            }
            developers {
                developer {
                    id developerId
                    name developerName
                    email developerEmail
                }
            }
            scm {
                connection gitUrl
                developerConnection gitUrl
                url siteUrl

            }
        }
    }
}

apply plugin: "com.jfrog.bintray"

version = libraryVersion

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    classifier = 'javadoc'
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        userOrg = developerOrganization
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        publish = true
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
            released = new Date()
            name = android.defaultConfig.versionName
            gpg {
                sign = true //Determines whether to GPG sign the files. The default is false
                passphrase = properties.getProperty("bintray.gpg.password")
                //Optional. The passphrase for GPG signing'
            }
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:26.0.2'
    compile 'com.google.android.gms:play-services-gcm:11.4.2'
    compile 'com.google.firebase:firebase-messaging:11.4.2'
}